)
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.xlab = 2
)
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 2
)
axis(
side = 1,
at = a,
labels = sprintf("%1.f Mb", a / 1000000)
)
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 1.9
)
axis(
side = 1,
at = a,
labels = sprintf("%1.f Mb", a / 1000000)
)
png(
file = "img/GC_length_all_apples.png",
units = "in", width = 12, height = 8, res = 400
)
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 1.9
)
axis(
side = 1,
at = a,
labels = sprintf("%1.f Mb", a / 1000000)
)
# uncomment this to add text labels
# calculate the centroids for labels
# centroids <- aggregate(cbind(length,
#                            gc) ~ chromosome, gc_len_col, mean)
#text(
#  x = centroids$length,
#  y = centroids$gc, labels = centroids$chromosome
#)
legend(30000000, 0.388,
legend = c("Crab-apple", "Domestic apple"),
col = c("grey", "grey"),
pch = c(17, 19),
cex = 1.2,
box.lty = 0,
pt.cex = 3
)
dev.off()
par(mar=c(0,0,0,0))
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 1.9
)
par(mar=c(2,2,2,2))
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 1.9
)
par(mar=c(5, 4, 4, 2))
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 1.9
)
par(mar=c(7, 4, 4, 2))
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 1.9
)
par(mar=c(5, 5, 4, 2))
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 1.9
)
png(
file = "img/GC_length_all_apples.png",
units = "in", width = 12, height = 8, res = 400
)
par(mar=c(5, 5, 4, 2))
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 1.9
)
axis(
side = 1,
at = a,
labels = sprintf("%1.f Mb", a / 1000000)
)
# uncomment this to add text labels
# calculate the centroids for labels
# centroids <- aggregate(cbind(length,
#                            gc) ~ chromosome, gc_len_col, mean)
#text(
#  x = centroids$length,
#  y = centroids$gc, labels = centroids$chromosome
#)
legend(30000000, 0.388,
legend = c("Crab-apple", "Domestic apple"),
col = c("grey", "grey"),
pch = c(17, 19),
cex = 1.2,
box.lty = 0,
pt.cex = 3
)
dev.off()
png(
file = "img/GC_length_all_apples_text.png",
units = "in", width = 12, height = 8, res = 400
)
par(mar=c(5, 5, 4, 2))
plot(gc_len_col$length,
gc_len_col$gc,
col = gc_len_col$col,
pch = gc_len_col$pch,
cex = 1.8,
xaxt = "n",
bty = "n",
ylab = "GC content",
xlab = "Chromosome length",
cex.lab = 1.9
)
axis(
side = 1,
at = a,
labels = sprintf("%1.f Mb", a / 1000000)
)
# uncomment this to add text labels
# calculate the centroids for labels
centroids <- aggregate(cbind(length,
gc) ~ chromosome, gc_len_col, mean)
text(
x = centroids$length,
y = centroids$gc, labels = centroids$chromosome
)
legend(30000000, 0.388,
legend = c("Crab-apple", "Domestic apple"),
col = c("grey", "grey"),
pch = c(17, 19),
cex = 1.2,
box.lty = 0,
pt.cex = 3
)
dev.off()
binom.test(x = c(10, 3), p = 0.5)
binom.test(x = c(0, 1), p = 0.5)
binom.test(x = c(5, 0), p = 0.5)
binom.test(x = c(10, 3), p = 0.5)
chisq.test(x = 10, y = 3)
read_plot_fastk_histex("drMalDome58_m64016e_210808_072016.filtered_hist.txt")
setwd("~/Documents/apple_day/src/analysis/kmer/")
read_plot_fastk_histex <- function(path, range = 2:100) {
spectrum <- fread(path, skip = 7, col.names = c("index", "count", "cumulative_per"))
spectrum[, index := as.numeric(gsub(":", "", index))]
spectrum <- spectrum[order(index)]
plot(spectrum$index[range],
spectrum$count[range],
type = "l",
bty = "n",
xlab = "Kmer frequency",
ylab = "Frequency of Kmer frequency")
}
read_plot_fastk_histex("drMalDome58_m64016e_210808_072016.filtered_hist.txt")
# inversion between our genome and 'golden delicious'
for(i in c(1, 2, 6, 10)) {
tmp <- prim_alignment[prim_alignment$qname == paste0("chr", i) & prim_alignment$tname == paste0("SUPER_", i), ]
tmp_dotplot <- my_dotplot(tmp,
label_seqs = TRUE,
xlab = "Golden Delicious",
ylab = "DToL Costard",
alignment_colour1 = tmp[tmp$strand == "+",]$COLOUR,
alignment_colour2 = tmp[tmp$strand == "-",]$COLOUR, line_size = 8) + theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=20,
face="bold")) + geom_abline(slope = 1,
intercept = 0,
colour = "red",
linetype = "dashed")
ggsave(filename = paste0("img/", paste0("chr", i), ".png"),
plot = tmp_dotplot,
device = "png",
units = "in",
width = 10,
height = 10)
}
setwd("~/Documents/apple_day/src/analysis/minimap2/")
# inversion between our genome and 'golden delicious'
for(i in c(1, 2, 6, 10)) {
tmp <- prim_alignment[prim_alignment$qname == paste0("chr", i) & prim_alignment$tname == paste0("SUPER_", i), ]
tmp_dotplot <- my_dotplot(tmp,
label_seqs = TRUE,
xlab = "Golden Delicious",
ylab = "DToL Costard",
alignment_colour1 = tmp[tmp$strand == "+",]$COLOUR,
alignment_colour2 = tmp[tmp$strand == "-",]$COLOUR, line_size = 8) + theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=20,
face="bold")) + geom_abline(slope = 1,
intercept = 0,
colour = "red",
linetype = "dashed")
ggsave(filename = paste0("img/", paste0("chr", i), ".png"),
plot = tmp_dotplot,
device = "png",
units = "in",
width = 10,
height = 10)
}
read_plot_fastk_histex("drMalDome58_m64016e_210808_072016.filtered_hist.txt")
setwd("~/Documents/apple_day/src/analysis/kmer/")
read_plot_fastk_histex <- function(path, range = 2:100) {
spectrum <- fread(path, skip = 7, col.names = c("index", "count", "cumulative_per"))
spectrum[, index := as.numeric(gsub(":", "", index))]
spectrum <- spectrum[order(index)]
plot(spectrum$index[range],
spectrum$count[range],
type = "l",
bty = "n",
xlab = "Kmer frequency",
ylab = "Frequency of Kmer frequency")
}
read_plot_fastk_histex("drMalDome58_m64016e_210808_072016.filtered_hist.txt")
read_plot_fastk_histex <- function(path, range = 2:100) {
spectrum <- fread(path, skip = 7, col.names = c("index", "count", "cumulative_per"))
spectrum[, index := as.numeric(gsub(":", "", index))]
spectrum <- spectrum[order(index)]
plot(spectrum$index[range],
spectrum$count[range],
type = "l",
bty = "n",
xlab = "Kmer frequency",
ylab = "Frequency of Kmer frequency",
cex.lab = 3)
}
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
read_plot_fastk_histex <- function(path, range = 2:100) {
spectrum <- fread(path, skip = 7, col.names = c("index", "count", "cumulative_per"))
spectrum[, index := as.numeric(gsub(":", "", index))]
spectrum <- spectrum[order(index)]
plot(spectrum$index[range],
spectrum$count[range],
type = "l",
bty = "n",
xlab = "Kmer frequency",
ylab = "Frequency of Kmer frequency",
cex.lab = 2)
}
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
png(filename = "./img/drMalDome58_kmer_spectrum.png", width = 8,
height = 6,
units = "in")
png(filename = "./img/drMalDome58_kmer_spectrum.png", width = 8,
height = 6,
units = "in",
res = 1200)
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
dev.off()
png(filename = "./img/drMalDome58_kmer_spectrum.png", width = 8,
height = 6,
units = "in",
res = 1200)
par(mar = c(5,5,2,2))
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
dev.off()
png(filename = "./img/drMalDome58_kmer_spectrum.png", width = 8,
height = 6,
units = "in",
res = 400)
par(mar = c(5,5,3,2))
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
dev.off()
png(filename = "./img/drMalDome58_kmer_spectrum.png", width = 8,
height = 6,
units = "in",
res = 400)
par(mar = c(5,7,3,2))
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
dev.off()
png(filename = "./img/drMalDome58_kmer_spectrum.png", width = 8,
height = 6,
units = "in",
res = 400)
par(mar = c(5,5,3,2))
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
dev.off()
## tetmer
png(filename = "./img/drMalDome58_kmer_spectrum.png", width = 8,
height = 6,
units = "in",
res = 400)
par(mar = c(5, 4, 4, 2))
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
dev.off()
## tetmer
png(filename = "./img/drMalDome58_kmer_spectrum.png", width = 8,
height = 6,
units = "in",
res = 400)
par(mar = c(5, 5, 4, 2))
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
dev.off()
library(data.table)
setwd("~/Documents/apple_day/src/analysis/structural_variants/")
source("../helpers.R")
pi_windows <- fread("./data/drMalDome5.windowed.pi")
chroms <- pi_windows[, .(unique(CHROM))]$V1
pdf(file = "./img/pi_all_chroms_drMalDome5.pdf", height = 12)
par(mfrow = c(
length(chroms) / 2,
2
))
for (chrom in chroms) {
par(mar = c(2, 5, 1, 5))
pi_windows_plot(pi_windows, title = chrom, chromosome = chrom, ylim = c(summary(pi_windows$PI)["Min."], summary(pi_windows$PI)["Max."]))
}
dev.off()
chroms
chroms[-"scaffold_20"]
chroms[chroms != "scaffold_20"]
chroms <- chroms[chroms != "scaffold_20"]
pdf(file = "./img/pi_all_chroms_drMalDome5.pdf", height = 12)
par(mfrow = c(
length(chroms) / 2,
2
))
for (chrom in chroms) {
par(mar = c(2, 5, 1, 5))
pi_windows_plot(pi_windows, title = chrom, chromosome = chrom, ylim = c(summary(pi_windows$PI)["Min."], summary(pi_windows$PI)["Max."]))
}
dev.off()
pdf(file = "./img/pi_all_chroms_drMalDome5.pdf", height = 12)
par(mfrow = c(
(length(chroms) / 2) + 1,
2
))
for (chrom in chroms) {
par(mar = c(2, 5, 1, 5))
pi_windows_plot(pi_windows, title = chrom, chromosome = chrom, ylim = c(summary(pi_windows$PI)["Min."], summary(pi_windows$PI)["Max."]))
}
dev.off()
pi_windows <- fread("./data/drMalDome5_windows_filtered_no_missing.windowed.pi")
chroms <- pi_windows[, .(unique(CHROM))]$V1
chroms <- chroms[chroms != "scaffold_20"]
pdf(file = "./img/pi_all_chroms_drMalDome5.pdf", height = 12)
par(mfrow = c(
(length(chroms) / 2) + 1,
2
))
for (chrom in chroms) {
par(mar = c(2, 5, 1, 5))
pi_windows_plot(pi_windows, title = chrom, chromosome = chrom, ylim = c(summary(pi_windows$PI)["Min."], summary(pi_windows$PI)["Max."]))
}
dev.off()
spec
tetmer(spec)
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
setwd("~/Documents/apple_day/src/analysis/kmer/")
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016_only.filtered_hist.txt")
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016_only.filtered_hist.txt", range = 2:50)
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016_only.filtered_hist.txt", range = 2:40)
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016_only.filtered_hist.txt", range = 2:30)
read_plot_fastk_histex("./data/drMalDome58_m64016e_210808_072016.filtered_hist.txt")
lens
lens[, .(tot_len = sum(length)), by = .(assembly)]
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt")
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:400)
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200)
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 1000))
read_plot_fastk_histex <- function(path, range = 2:100, ...) {
spectrum <- fread(path, skip = 7, col.names = c("index", "count", "cumulative_per"))
spectrum[, index := as.numeric(gsub(":", "", index))]
spectrum <- spectrum[order(index)]
plot(spectrum$index[range],
spectrum$count[range],
type = "l",
bty = "n",
xlab = "Kmer frequency",
ylab = "Frequency of Kmer frequency",
cex.lab = 2,
...)
}
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 1000))
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 10000))
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 100000))
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 1000000))
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 2000000))
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 5000000))
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 6000000))
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 8000000))
setwd("~/Documents/apple_day/src/analysis/kmer/")
source("../helpers.R")
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", RETURN = TRUE)
sanger_newton_ill_spec <- read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", RETURN = TRUE)
sanger_newton_ill_spec[, .(index, count)]
fwrite(x = sanger_newton_ill_spec[, .(index, count)], file = "./data/sanger_newton_drMalDome6.R1_spectrum.txt")
# analyse with tetmer
spec <- Tetmer::read.spectrum(f = "./data/sanger_newton_drMalDome6.R1_spectrum.txt")
sanger_newton_ill_spec[, .(index, count)]
fwrite(x = sanger_newton_ill_spec[, .(index, count)],
file = "./data/sanger_newton_drMalDome6.R1_spectrum.txt",
sep = "\t", col.names = FALSE)
# analyse with tetmer
spec <- Tetmer::read.spectrum(f = "./data/sanger_newton_drMalDome6.R1_spectrum.txt")
spec
tetmer(spec)
tetmer(spec)
png(filename = "./img/sangers_newton_illumina.png", width = 8,
height = 6,
units = "in",
res = 400)
par(mar = c(5, 5, 4, 2))
read_plot_fastk_histex("./data/sanger_newton_drMalDome6.R1.txt", range = 2:200, ylim=c(0, 8000000))
dev.off()
install.packages("languageserver")
library(languageserver)
languageserver::run()
languageserver::run
setwd("~/Documents/apple_day/src/analysis/fw/data/")
source("../helpers.R")
source("../../helpers.R")
setwd("~/Documents/apple_day/src/analysis/kmer/")
source("../helpers.R")
## tetmer
install.packages("./Tetmer_2.1.0.tar.gz", repo=NULL)
# analyse with tetmer
spec <- Tetmer::read.spectrum(f = "./data/sanger_newton_drMalDome6.R1_spectrum.txt")
tetmer(spec)
remove.packages(pkgs = "Tetmer_2.1.0.tar.gz")
remove.packages(pkgs = "Tetmer_2.0.0")
installed.packages()
as.data.frame(installed.packages()[,c(1,3:4)])
remove.packages(pkgs = "Tetmer")
## tetmer
install.packages("./Tetmer_2.1.0.tar.gz", repo=NULL)
# analyse with tetmer
spec <- Tetmer::read.spectrum(f = "./data/sanger_newton_drMalDome6.R1_spectrum.txt")
tetmer(spec)
tetmer(spec)
